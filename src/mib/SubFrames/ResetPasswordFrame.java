/*
 * Copyright (C) 2020 by Adam Hassan - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * Written by Adam Hassan <adamhassan@pm.me>, May 2020
 */

package mib.SubFrames;

import javax.swing.JOptionPane;
import mib.Helpers.Validate;
import mib.Helpers.Constant;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author Adam Hassan <adamhassan@pm.me>
 */
public class ResetPasswordFrame extends javax.swing.JFrame {

    private static InfDB db;
    private static String id;
    private static String loginEntityType;
    
    /**
     * Creates new form ResetPasswordFrame
     * @param db InfDB instance when ResetPasswordFrame is initiated
     * @param id to identify user that is currently in application
     */
    public ResetPasswordFrame(InfDB db, String id, String loginEntityType) {
        initComponents();
        
        ResetPasswordFrame.db = db;
        ResetPasswordFrame.id = id;
        ResetPasswordFrame.loginEntityType = loginEntityType;
        
        this.setTitle("MiB - Byt Lösenord");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        passwordLabel = new javax.swing.JLabel();
        newPasswordLabel = new javax.swing.JLabel();
        newPasswordTextField = new javax.swing.JPasswordField();
        jSeparator1 = new javax.swing.JSeparator();
        confirmPasswordTextField = new javax.swing.JPasswordField();
        newPasswordConfirmLabel = new javax.swing.JLabel();
        changePasswordButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        mainTitleLabel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        passwordTextField = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        passwordLabel.setText("Lösenord");
        passwordLabel.setAlignmentY(0.0F);

        newPasswordLabel.setText("Nytt lösenord");
        newPasswordLabel.setAlignmentY(0.0F);

        newPasswordTextField.setToolTipText("Enter your password");
        newPasswordTextField.setAlignmentX(0.0F);
        newPasswordTextField.setAlignmentY(0.0F);

        confirmPasswordTextField.setToolTipText("Enter your password");
        confirmPasswordTextField.setAlignmentX(0.0F);
        confirmPasswordTextField.setAlignmentY(0.0F);

        newPasswordConfirmLabel.setText("Bekräfta nytt lösenord");
        newPasswordConfirmLabel.setAlignmentY(0.0F);

        changePasswordButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        changePasswordButton.setText("Byt Lösenord");
        changePasswordButton.setAlignmentY(0.0F);
        changePasswordButton.setContentAreaFilled(false);
        changePasswordButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        changePasswordButton.setFocusPainted(false);
        changePasswordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePasswordActionPerformed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        cancelButton.setText("Avbryt");
        cancelButton.setAlignmentY(0.0F);
        cancelButton.setContentAreaFilled(false);
        cancelButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cancelButton.setFocusPainted(false);
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        mainTitleLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        mainTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainTitleLabel.setText("MiB - Byt Lösenord");
        mainTitleLabel.setAlignmentY(0.0F);

        jSeparator2.setAlignmentX(0.0F);
        jSeparator2.setAlignmentY(0.0F);

        passwordTextField.setToolTipText("Enter your password");
        passwordTextField.setAlignmentX(0.0F);
        passwordTextField.setAlignmentY(0.0F);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(mainTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newPasswordConfirmLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirmPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changePasswordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(mainTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newPasswordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(newPasswordConfirmLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(confirmPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(changePasswordButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(364, 397));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * A general method inside button event to change password for a user
     * no matter user type -> as we are passing in login entity type
     * Validates the new password with a confirm field
     * and the entered text with helper method (isTextMatching) 
     * @param evt 
     */
    private void changePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePasswordActionPerformed
        
        if (Validate.isTextEmpty(passwordTextField) 
                && Validate.isTextEmpty(newPasswordTextField)
                && Validate.isTextEmpty(confirmPasswordTextField)) {
            
            // checks if old password is correct (lookup in db)
            try {
                if (new String(passwordTextField.getPassword()).equals(db.fetchSingle("SELECT LOSENORD FROM " + loginEntityType + " WHERE " + loginEntityType + "_ID" + " = " + id))) {
                    System.out.println("Gammla lösenord är rätt!!");
                } else {
                    JOptionPane.showMessageDialog(null, Constant.ERROR_OLD_PASSWORD_INCORRECT);
                    return;
                }
            } catch (InfException exception) {
                JOptionPane.showMessageDialog(null, Constant.ERROR_DATABASE);
                System.out.println(exception.getMessage());
            }
            
            // checks if new password is matching and password length is correct
            // updates new password in db
            if (Validate.isPasswordMatching(newPasswordTextField, confirmPasswordTextField) && Validate.isPasswordLengthCorrect(newPasswordTextField)) {
                System.out.println("Password is matching!!");
                
                try { 
                    String query = "UPDATE " + loginEntityType + " SET LOSENORD=\'" + new String(newPasswordTextField.getPassword()) + "\' WHERE " + loginEntityType + "_ID" + "=" + id;
                    System.out.println(query);
                    db.update(query);
                    JOptionPane.showMessageDialog(null, Constant.SUCCESS_PASSWORD_SET);
                    this.dispose();
                } catch (InfException exception) {
                    JOptionPane.showMessageDialog(null, Constant.ERROR_DATABASE);
                    System.out.println(exception.getMessage());
                }
            } 
        }
    }//GEN-LAST:event_changePasswordActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
    }//GEN-LAST:event_cancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResetPasswordFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResetPasswordFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResetPasswordFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResetPasswordFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ResetPasswordFrame(db, id, loginEntityType).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton changePasswordButton;
    private javax.swing.JPasswordField confirmPasswordTextField;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel mainTitleLabel;
    private javax.swing.JLabel newPasswordConfirmLabel;
    private javax.swing.JLabel newPasswordLabel;
    private javax.swing.JPasswordField newPasswordTextField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPasswordField passwordTextField;
    // End of variables declaration//GEN-END:variables
}
